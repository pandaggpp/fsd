8) For students enrolment developed in Module 2, create a generic class view
which displays list of students and detailview that displays student details for
any selected student in the list

admin.py

from django.contrib import admin
from App.models import Course, Student
admin.site.register(Student)
admin.site.register(Course)

models.py

from django.db import models
from django.forms import ModelForm
class Course(models.Model):
 course_code=models.CharField(max_length=40)
 course_name=models.CharField(max_length=100)
 course_credits=models.IntegerField(blank=True, null=True)
 def __str__(self):
  return self.course_name

class Student(models.Model):
 student_usn=models.CharField(max_length=20)
 student_name=models.CharField(max_length=100)
 student_sem=models.IntegerField()
 enrolment=models.ManyToManyField(Course)
 def __str__(self):
  return self.student_name+"("+self.student_usn+")"

In template folder
student_list.html

<html>
<body>
{% if student_list %}
<table border>
<tr>
<th>USN</th>
<th>Courses Enrolled</th>
</tr>
{% for student in student_list %}
<tr>
<td><a href="/student_detail/{{student.pk}}">{{student.student_usn }}</a></td>
<td>{% for course in student.enrolment.all %}
<span>{{ course.course_name }}</span>
{% endfor %}
</td>
</tr>
{% endfor %}
</table>
{% else %}
<h1>No Students Enrolled</h1>
{% endif %}
</body>
</html>

student_detail.html
<h1>Student Name: {{ student.student_name }}</h1>
<h1>Student USN: {{ student.student_usn }}</h1>
<h1>Student Sem: {{ student.student_sem }}</h1>

views.py
from django.shortcuts import render
from django.views import generic
from App.models import Student
class StudentListView(generic.ListView):
 model=Student
 template_name="student_list.html"
class StudentDetailView(generic.DetailView):
 model=Student
 template_name="student_detail.html"

urls.py

from django.contrib import admin
from django.urls import path
from App.views import StudentListView,StudentDetailView
urlpatterns = [
 path('admin/', admin.site.urls),
 path('student_list/', StudentListView.as_view()),
 path('student_detail/<int:pk>/', StudentDetailView.as_view()),
]

Command for Execution
1 python manage.py makemigrations
2 python manage.py migrate
3 python manage.py createsuperuser
Username: abc123
Password: abc123
Re-Password: abc123
4 python manage.py runserver